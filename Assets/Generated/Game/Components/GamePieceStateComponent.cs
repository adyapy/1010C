//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _1010C.Scripts.Components.Piece.PieceStateComponent pieceState { get { return (_1010C.Scripts.Components.Piece.PieceStateComponent)GetComponent(GameComponentsLookup.PieceState); } }
    public bool hasPieceState { get { return HasComponent(GameComponentsLookup.PieceState); } }

    public void AddPieceState(_1010C.Scripts.Components.Piece.PieceState newValue) {
        var index = GameComponentsLookup.PieceState;
        var component = (_1010C.Scripts.Components.Piece.PieceStateComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Piece.PieceStateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePieceState(_1010C.Scripts.Components.Piece.PieceState newValue) {
        var index = GameComponentsLookup.PieceState;
        var component = (_1010C.Scripts.Components.Piece.PieceStateComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Piece.PieceStateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePieceState() {
        RemoveComponent(GameComponentsLookup.PieceState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPieceState;

    public static Entitas.IMatcher<GameEntity> PieceState {
        get {
            if (_matcherPieceState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PieceState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPieceState = matcher;
            }

            return _matcherPieceState;
        }
    }
}

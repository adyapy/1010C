//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _1010C.Scripts.Components.Tile.TileStateComponent tileState { get { return (_1010C.Scripts.Components.Tile.TileStateComponent)GetComponent(GameComponentsLookup.TileState); } }
    public bool hasTileState { get { return HasComponent(GameComponentsLookup.TileState); } }

    public void AddTileState(_1010C.Scripts.Components.Tile.TileState newValue) {
        var index = GameComponentsLookup.TileState;
        var component = (_1010C.Scripts.Components.Tile.TileStateComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Tile.TileStateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTileState(_1010C.Scripts.Components.Tile.TileState newValue) {
        var index = GameComponentsLookup.TileState;
        var component = (_1010C.Scripts.Components.Tile.TileStateComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Tile.TileStateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTileState() {
        RemoveComponent(GameComponentsLookup.TileState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileState;

    public static Entitas.IMatcher<GameEntity> TileState {
        get {
            if (_matcherTileState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileState = matcher;
            }

            return _matcherTileState;
        }
    }
}

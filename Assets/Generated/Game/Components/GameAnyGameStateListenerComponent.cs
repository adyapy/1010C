//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyGameStateListenerComponent anyGameStateListener { get { return (AnyGameStateListenerComponent)GetComponent(GameComponentsLookup.AnyGameStateListener); } }
    public bool hasAnyGameStateListener { get { return HasComponent(GameComponentsLookup.AnyGameStateListener); } }

    public void AddAnyGameStateListener(System.Collections.Generic.List<IAnyGameStateListener> newValue) {
        var index = GameComponentsLookup.AnyGameStateListener;
        var component = (AnyGameStateListenerComponent)CreateComponent(index, typeof(AnyGameStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGameStateListener(System.Collections.Generic.List<IAnyGameStateListener> newValue) {
        var index = GameComponentsLookup.AnyGameStateListener;
        var component = (AnyGameStateListenerComponent)CreateComponent(index, typeof(AnyGameStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGameStateListener() {
        RemoveComponent(GameComponentsLookup.AnyGameStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyGameStateListener;

    public static Entitas.IMatcher<GameEntity> AnyGameStateListener {
        get {
            if (_matcherAnyGameStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyGameStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyGameStateListener = matcher;
            }

            return _matcherAnyGameStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyGameStateListener(IAnyGameStateListener value) {
        var listeners = hasAnyGameStateListener
            ? anyGameStateListener.value
            : new System.Collections.Generic.List<IAnyGameStateListener>();
        listeners.Add(value);
        ReplaceAnyGameStateListener(listeners);
    }

    public void RemoveAnyGameStateListener(IAnyGameStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGameStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGameStateListener();
        } else {
            ReplaceAnyGameStateListener(listeners);
        }
    }
}

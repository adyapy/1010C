//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public _1010C.Scripts.Components.Piece.PieceTypeComponent pieceType { get { return (_1010C.Scripts.Components.Piece.PieceTypeComponent)GetComponent(GameComponentsLookup.PieceType); } }
    public bool hasPieceType { get { return HasComponent(GameComponentsLookup.PieceType); } }

    public void AddPieceType(_1010C.Scripts.PieceRecipes.PieceType newValue) {
        var index = GameComponentsLookup.PieceType;
        var component = (_1010C.Scripts.Components.Piece.PieceTypeComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Piece.PieceTypeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePieceType(_1010C.Scripts.PieceRecipes.PieceType newValue) {
        var index = GameComponentsLookup.PieceType;
        var component = (_1010C.Scripts.Components.Piece.PieceTypeComponent)CreateComponent(index, typeof(_1010C.Scripts.Components.Piece.PieceTypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePieceType() {
        RemoveComponent(GameComponentsLookup.PieceType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPieceType;

    public static Entitas.IMatcher<GameEntity> PieceType {
        get {
            if (_matcherPieceType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PieceType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPieceType = matcher;
            }

            return _matcherPieceType;
        }
    }
}

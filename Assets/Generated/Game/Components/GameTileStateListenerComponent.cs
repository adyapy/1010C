//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileStateListenerComponent tileStateListener { get { return (TileStateListenerComponent)GetComponent(GameComponentsLookup.TileStateListener); } }
    public bool hasTileStateListener { get { return HasComponent(GameComponentsLookup.TileStateListener); } }

    public void AddTileStateListener(System.Collections.Generic.List<ITileStateListener> newValue) {
        var index = GameComponentsLookup.TileStateListener;
        var component = (TileStateListenerComponent)CreateComponent(index, typeof(TileStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTileStateListener(System.Collections.Generic.List<ITileStateListener> newValue) {
        var index = GameComponentsLookup.TileStateListener;
        var component = (TileStateListenerComponent)CreateComponent(index, typeof(TileStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTileStateListener() {
        RemoveComponent(GameComponentsLookup.TileStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileStateListener;

    public static Entitas.IMatcher<GameEntity> TileStateListener {
        get {
            if (_matcherTileStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileStateListener = matcher;
            }

            return _matcherTileStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTileStateListener(ITileStateListener value) {
        var listeners = hasTileStateListener
            ? tileStateListener.value
            : new System.Collections.Generic.List<ITileStateListener>();
        listeners.Add(value);
        ReplaceTileStateListener(listeners);
    }

    public void RemoveTileStateListener(ITileStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = tileStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTileStateListener();
        } else {
            ReplaceTileStateListener(listeners);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridPositionListenerComponent gridPositionListener { get { return (GridPositionListenerComponent)GetComponent(GameComponentsLookup.GridPositionListener); } }
    public bool hasGridPositionListener { get { return HasComponent(GameComponentsLookup.GridPositionListener); } }

    public void AddGridPositionListener(System.Collections.Generic.List<IGridPositionListener> newValue) {
        var index = GameComponentsLookup.GridPositionListener;
        var component = (GridPositionListenerComponent)CreateComponent(index, typeof(GridPositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGridPositionListener(System.Collections.Generic.List<IGridPositionListener> newValue) {
        var index = GameComponentsLookup.GridPositionListener;
        var component = (GridPositionListenerComponent)CreateComponent(index, typeof(GridPositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGridPositionListener() {
        RemoveComponent(GameComponentsLookup.GridPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridPositionListener;

    public static Entitas.IMatcher<GameEntity> GridPositionListener {
        get {
            if (_matcherGridPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridPositionListener = matcher;
            }

            return _matcherGridPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGridPositionListener(IGridPositionListener value) {
        var listeners = hasGridPositionListener
            ? gridPositionListener.value
            : new System.Collections.Generic.List<IGridPositionListener>();
        listeners.Add(value);
        ReplaceGridPositionListener(listeners);
    }

    public void RemoveGridPositionListener(IGridPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gridPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGridPositionListener();
        } else {
            ReplaceGridPositionListener(listeners);
        }
    }
}

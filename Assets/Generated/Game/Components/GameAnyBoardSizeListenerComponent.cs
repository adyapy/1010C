//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyBoardSizeListenerComponent anyBoardSizeListener { get { return (AnyBoardSizeListenerComponent)GetComponent(GameComponentsLookup.AnyBoardSizeListener); } }
    public bool hasAnyBoardSizeListener { get { return HasComponent(GameComponentsLookup.AnyBoardSizeListener); } }

    public void AddAnyBoardSizeListener(System.Collections.Generic.List<IAnyBoardSizeListener> newValue) {
        var index = GameComponentsLookup.AnyBoardSizeListener;
        var component = (AnyBoardSizeListenerComponent)CreateComponent(index, typeof(AnyBoardSizeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyBoardSizeListener(System.Collections.Generic.List<IAnyBoardSizeListener> newValue) {
        var index = GameComponentsLookup.AnyBoardSizeListener;
        var component = (AnyBoardSizeListenerComponent)CreateComponent(index, typeof(AnyBoardSizeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyBoardSizeListener() {
        RemoveComponent(GameComponentsLookup.AnyBoardSizeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyBoardSizeListener;

    public static Entitas.IMatcher<GameEntity> AnyBoardSizeListener {
        get {
            if (_matcherAnyBoardSizeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyBoardSizeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyBoardSizeListener = matcher;
            }

            return _matcherAnyBoardSizeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyBoardSizeListener(IAnyBoardSizeListener value) {
        var listeners = hasAnyBoardSizeListener
            ? anyBoardSizeListener.value
            : new System.Collections.Generic.List<IAnyBoardSizeListener>();
        listeners.Add(value);
        ReplaceAnyBoardSizeListener(listeners);
    }

    public void RemoveAnyBoardSizeListener(IAnyBoardSizeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyBoardSizeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyBoardSizeListener();
        } else {
            ReplaceAnyBoardSizeListener(listeners);
        }
    }
}
